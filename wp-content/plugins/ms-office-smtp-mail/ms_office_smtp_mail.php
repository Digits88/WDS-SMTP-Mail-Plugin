<?php
/*
Plugin Name: MS Office SMTP
Version: 0.1
Description: Reconfigures the wp_mail() function to use SMTP instead of PHP's mail()
Author: WebDevStudios
Author URI: http://webdevstudios.com/
*/

# Options and default values
global $mso_smtp_options;
$mso_smtp_options = array(
	'mail_from' => null,
	'mail_from_name' => null,
	'mailer' => 'smtp',
	'mail_set_return_path' => false,
	'smtp_host' => 'localhost',
	'smtp_port' => '25',
	'smtp_ssl' => 'none',
	'smtp_auth' => false,
	'smtp_user' => null,
	'smtp_pass' => null,
	'smtp_user' => null,
);

if( !function_exists('mso_smtp_activate') ) {
	function mso_smtp_activate() {
		global $mso_smtp_options;
		
		foreach( $mso_smtp_options as $name => $value )
			add_option( $name, $value );
	}
}

if( !function_exists('mso_smtp_whitelist_options') ) {
	function mso_smtp_whitelist_options( $whitelist_options ) {
		global $mso_smtp_options;
		
		$whitelist_options['email'] = array_keys( $mso_smtp_options );
		return $whitelist_options;
	}
}

if( !function_exists('phpmailer_init_smtp') ) {
	function phpmailer_init_smtp( $phpmailer ) {
		# we can't use smtp without a host
		if( !get_option('mailer') || (get_option('mailer') == 'smtp' && !get_option('smtp_host')) )
			return;	
			
		# Set the mailer type - overriding isMail method
		$phpmailer->Mailer = get_option('mailer');
		
		# Sender return path
		if( get_option('mail_set_return_path') )
			$phpmailer->Sender = $phpmailer->From;
			
		# Set SMTPSecure value
		$phpmailer->SMTPSecure = get_option('smtp_ssl') == 'none' ? '' : get_option('smtp_ssl');

		if( get_option('mailer') == 'smtp' ) {
			# Set the SMTPSecure value
			$phpmailer->SMTPSecure = get_option('smtp_ssl') == 'none' ? '' : get_option('smtp_ssl');
			
			$phpmailer->Host = get_option('smtp_host');
			$phpmailer->Port = get_option('smtp_port');
			
			# Is SMTP Auth on?
			if( get_option('smtp_auth') == true ) {
				$phpmailer->SMTPAuth = true;
				$phpmailer->Username = get_option('smtp_user');
				$phpmailer->Password = get_option('smtp_pass');
			}
		}
		
		$phpmailer = apply_filters('mso_smtp_custom_options', $phpmailer);
	}
}

if( !function_exists('mso_smtp_options_page') ) {
	function mso_smtp_options_page() {
		global $mso_smtp_options, $phpmailer;
		
		if( !is_object($phpmailer) || !is_a($phpmailer, 'PHPMailer') ) {
			require_once ABSPATH . WPINC . '/class-phpmailer.php';
			require_once ABSPATH . WPINC . '/class-smtp.php';
			$phpmailer = new PHPMailer(true);
		}
		
		if( isset($_POST['mso_smtp_action']) 
			&& $_POST['mso_smtp_action'] == __('Send Test', 'mso_smtp')	
			&& isset($_POST['to'])
		) {
			check_admin_referer('test-email');
			
			# Set up the mail vars
			$to = $_POST['to'];
			$subject = 'MSO SMTP: ' . __('Test mail to ', 'mso_smtp') . $to;
			$message = __('This is a test email generated by the MSO SMTP WordPress plugin');
			
			# Set SMTPDebug to true
			$phpmailer->SMTPDebug = true;
			
			# Start output buffer
			ob_start();
			
			$result = wp_mail($to, $subject, $message);
			
			$smtp_debug = ob_get_clean();
			?>
			<div id="message" class="updated fade">
				<p><strong><?php _e('Test Message Sent', 'mso_smtp'); ?></strong></p>
				<p><?php _e('The result was:', 'mso_smtp'); ?></p>
				<pre><?php var_dump($result); ?></pre>
				<p><?php _e('The full debugging output is shown below:', 'mso_smtp'); ?></p>
				<pre><?php var_dump($phpmailer); ?></pre>
				<p><?php _e('The SMTP debugging output is shown below:', 'mso_smtp'); ?></p>
				<pre><?php echo $smtp_debug ?></pre>
			</div>
			<?php
			# Destroy the mailer
			unset($phpmailer);
		}
		?>
<div class="wrap">
	<h2><?php _e('MS Office SMTP Mail Options', 'mso_smtp'); ?></h2>
	<form method="post" action="options.php">
		<?php wp_nonce_field('email-options'); ?>
		<table class="optiontable form-table">
			<tr valign="top">
				<th scope="row"><label for="mail_from"><?php _e('From Email', 'mso_smtp'); ?></label></th>
				<td>
					<input name="mail_from" type="text" id="mail_from" value="<?php echo get_option('mail_from'); ?>" size="40" class="regular-text" />
					<span class="description">
						<?php
							_e('You can specify the email address that emails should be sent from. If you leave this blank, the default email will be used.', 'mso_smtp'); 
							if(get_option('db_version') < 6124) { 
								echo '<br /><span style="color: red;">'; 
								_e('<strong>Please Note:</strong> You appear to be using a version of WordPress prior to 2.3. Please ignore the From Name field and instead enter Name&lt;email@domain.com&gt; in this field.', 'mso_smtp'); 
								echo '</span>'; 
							} 
						?>
					</span>
				</td>
			</tr>
			<tr valign="top">
				<th scope="row">
					<label for="mail_from_name"><?php _e('From Name', 'mso_smtp'); ?></label>
				</th>
				<td>
					<input name="mail_from_name" type="text" id="mail_from_name" value="<?php echo get_option('mail_from_name'); ?>" size="40" class="regular-text" />
					<span class="description"><?php _e('You can specify the name that emails should be sent from. If you leave this blank, the emails will be sent from WordPress.', 'mso_smtp'); ?></span>
				</td>
			</tr>
		</table>
						
		<table class="optiontable form-table">
			<tr valign="top">
				<th scope="row"><?php _e('Mailer', 'mso_smtp'); ?> </th>
				<td>
					<fieldset><legend class="screen-reader-text"><span><?php _e('Mailer', 'mso_smtp'); ?></span></legend>
					<p><input id="mailer_smtp" type="radio" name="mailer" value="smtp" <?php checked('smtp', get_option('mailer')); ?> />
					<label for="mailer_smtp"><?php _e('Send all WordPress emails via SMTP.', 'mso_smtp'); ?></label></p>
					<p><input id="mailer_mail" type="radio" name="mailer" value="mail" <?php checked('mail', get_option('mailer')); ?> />
					<label for="mailer_mail"><?php _e('Use the PHP mail() function to send emails.', 'mso_smtp'); ?></label></p>
					</fieldset>
				</td>
			</tr>
		</table>
						
		<table class="optiontable form-table">
			<tr valign="top">
				<th scope="row"><?php _e('Return Path', 'mso_smtp'); ?> </th>
				<td><fieldset><legend class="screen-reader-text"><span><?php _e('Return Path', 'mso_smtp'); ?></span></legend><label for="mail_set_return_path">
				<input name="mail_set_return_path" type="checkbox" id="mail_set_return_path" value="true" <?php checked('true', get_option('mail_set_return_path')); ?> />
				<?php _e('Set the return-path to match the From Email'); ?></label>
				</fieldset></td>
			</tr>
		</table>
				
		<h3><?php _e('SMTP Options', 'mso_smtp'); ?></h3>
		<p><?php _e('These options only apply if you have chosen to send mail by SMTP above.', 'mso_smtp'); ?></p>
				
		<table class="optiontable form-table">
			<tr valign="top">
				<th scope="row"><label for="smtp_host"><?php _e('SMTP Host', 'mso_smtp'); ?></label></th>
				<td><input name="smtp_host" type="text" id="smtp_host" value="<?php echo get_option('smtp_host'); ?>" size="40" class="regular-text" /></td>
			</tr>
			<tr valign="top">
				<th scope="row"><label for="smtp_port"><?php _e('SMTP Port', 'mso_smtp'); ?></label></th>
				<td><input name="smtp_port" type="text" id="smtp_port" value="<?php echo get_option('smtp_port'); ?>" size="6" class="regular-text" /></td>
			</tr>
			<tr valign="top">
				<th scope="row"><?php _e('Encryption', 'mso_smtp'); ?> </th>
				<td><fieldset><legend class="screen-reader-text"><span><?php _e('Encryption', 'mso_smtp'); ?></span></legend>
				<input id="smtp_ssl_none" type="radio" name="smtp_ssl" value="none" <?php checked('none', get_option('smtp_ssl')); ?> />
				<label for="smtp_ssl_none"><span><?php _e('No encryption.', 'mso_smtp'); ?></span></label><br />
				<input id="smtp_ssl_ssl" type="radio" name="smtp_ssl" value="ssl" <?php checked('ssl', get_option('smtp_ssl')); ?> />
				<label for="smtp_ssl_ssl"><span><?php _e('Use SSL encryption.', 'mso_smtp'); ?></span></label><br />
				<input id="smtp_ssl_tls" type="radio" name="smtp_ssl" value="tls" <?php checked('tls', get_option('smtp_ssl')); ?> />
				<label for="smtp_ssl_tls"><span><?php _e('Use TLS encryption. This is not the same as STARTTLS. For most servers SSL is the recommended option.', 'mso_smtp'); ?></span></label>
				</td>
			</tr>
			<tr valign="top">
				<th scope="row"><?php _e('Authentication', 'mso_smtp'); ?> </th>
				<td>
					<input id="smtp_auth_false" type="radio" name="smtp_auth" value="false" <?php checked('false', get_option('smtp_auth')); ?> />
					<label for="smtp_auth_false"><span><?php _e('No: Do not use SMTP authentication.', 'mso_smtp'); ?></span></label><br />
					<input id="smtp_auth_true" type="radio" name="smtp_auth" value="true" <?php checked('true', get_option('smtp_auth')); ?> />
					<label for="smtp_auth_true"><span><?php _e('Yes: Use SMTP authentication.', 'mso_smtp'); ?></span></label><br />
					<span class="description"><?php _e('If this is set to no, the values below are ignored.', 'mso_smtp'); ?></span>
				</td>
			</tr>	
			<tr valign="top">
				<th scope="row"><label for="smtp_user"><?php _e('Username', 'mso_smtp'); ?></label></th>
				<td><input name="smtp_user" type="text" id="smtp_user" value="<?php echo get_option('smtp_user'); ?>" size="40" class="code" /></td>
			</tr>
			<tr valign="top">
				<th scope="row"><label for="smtp_pass"><?php _e('Password', 'mso_smtp'); ?></label></th>
				<td><input name="smtp_pass" type="text" id="smtp_pass" value="<?php echo get_option('smtp_pass'); ?>" size="40" class="code" /></td>
			</tr>
		</table>
				
		<p class="submit"><input type="submit" name="submit" id="submit" class="button-primary" value="<?php _e('Save Changes'); ?>" /></p>
			<input type="hidden" name="action" value="update" />
		</p>
		<input type="hidden" name="option_page" value="email">
	</form>
				
	<h3><?php _e('Send a Test Email', 'mso_smtp'); ?></h3>		
	<form method="POST" action="options-general.php?page=<?php echo plugin_basename(__FILE__); ?>">
		<?php wp_nonce_field('test-email'); ?>
		<table class="optiontable form-table">
			<tr valign="top">
				<th scope="row"><label for="to"><?php _e('To:', 'mso_smtp'); ?></label></th>
				<td><input name="to" type="text" id="to" value="" size="40" class="code" />
					<span class="description"><?php _e('Type an email address here and then click Send Test to generate a test email.', 'mso_smtp'); ?></span>
				</td>
			</tr>
		</table>
		<p class="submit">
			<input type="submit" name="mso_smtp_action" id="mso_smtp_action" class="button-primary" value="<?php _e('Send Test', 'mso_smtp'); ?>" />
		</p>
	</form>		
</div>
<?php
	}
}

if( !function_exists('mso_smtp_menus') )
{
	function mso_smtp_menus()
	{
		if( function_exists('add_submenu_page') ) 
		{
			add_options_page(__('Advanced Email Options', 'mso_smtp'),__('Email', 'mso_smtp'),'manage_options',__FILE__,'mso_smtp_options_page');
		}
	}
}

# Sets the from email value
if( !function_exists('mso_smtp_mail_from') )
{
	function mso_smtp_mail_from( $orig )
	{
		# This is copied from pluggable.php lines 348-354 as at revision 10150
		# http://trac.wordpress.org/browser/branches/2.7/wp-includes/pluggable.php#L348
	
		# Get the site domain and get rid of www.
		$sitename = strtolower($_SERVER['SERVER_NAME']);
		if( substr($sitename, 0, 4) == 'www.' )
			$sitename = substr($sitename, 4);

		$default_from = 'wordpress@' . $sitename;
		# End of copied code
	
		# If the from email is not the default, return it unchanged
		if( $orig != $default_from ) 
			return $orig;
	
		if( is_email(get_option('mail_from'), false) )
			return get_option('mail_from');
	
		# If in doubt, return the original value
		return $orig;
	}
}

/**
 * This function sets the from name value
 */
if( !function_exists('mso_smtp_mail_from_name') ) {
	function mso_smtp_mail_from_name( $orig ) {
		# Only filter if the from name is the default
		if( $orig == 'WordPress' ) {
			if( get_option('mail_from_name') != "" && is_string(get_option('mail_from_name')) )
				return get_option('mail_from_name');
		}
		
		# return the original value
		return $orig;
	}
}

function mso_smtp_plugin_action_links($links, $file) {
	if( $file != plugin_basename(__FILE__) )
		return $links;

	$settings_link = '<a href="options-general.php?page=' . plugin_basename(__FILE__) . '">' . __('Settings', 'mso_smtp') . '</a>';

	array_unshift($links, $settings_link);
	return $links;
}

# Add an action on phpmailer_init
add_action( 'phpmailer_init','phpmailer_init_smtp' );

# Whitelist our options
add_filter( 'whitelist_options', 'mso_smtp_whitelist_options' );

# Add the create pages options
add_action( 'admin_menu','mso_smtp_menus' );

# Add an activation hook for this plugin
register_activation_hook( __FILE__,'mso_smtp_activate' );

# Adds "Settings" link to the plugin action page
add_filter( 'plugin_action_links', 'mso_smtp_plugin_action_links',10,2 );

# Add filters to replace the mail from name and email address
add_filter( 'wp_mail_from','mso_smtp_mail_from' );
add_filter( 'wp_mail_from_name','mso_smtp_mail_from_name' );